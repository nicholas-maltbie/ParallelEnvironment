// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

float inertia;
float initialWater;
float initialVelocity;
float gravity;
float sedimentCapacityFactor;
float evaporationRate;
float minSlope;
float minCapacity;
float depositionRate;
float erodeRate;
int maxDropletLifetime;
int erodeRadius;
bool includeVelocity;

// brush for erosion
StructuredBuffer<float> erodeBrush;
// Buffer for map height
int mapDimX;
int mapDimY;
StructuredBuffer<float> heightMap;
// Location of each droplet for a run of the iterations
StructuredBuffer<int> randomIndices;
// Output buffer
RWStructuredBuffer<float> erosionMap;

// Gets the index in the height map of a x,y coordinate
int GetIndex(int2 pos) {
    return pos.x + pos.y * mapDimX;
}

// Gets the height of the map at a given position
// Takes in a position with values x and y in grid
// Find the closest valid location in the map 
float GetHeight(int2 pos) {
    pos.x = min(max(pos.x, 0), mapDimX);
    pos.y = min(max(pos.y, 0), mapDimY);
    int key = GetIndex(pos);
    return heightMap[key] + erosionMap[key];
}

// Adds height to the map at a given position
void AddHeight(int2 pos, float change) {
    int key = GetIndex(pos);
    erosionMap[key] += change;
}


[numthreads(8,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int index = randomIndices[id.x];
    int2 posInt = int2(index % mapDimY, index / mapDimY);
    AddHeight(posInt, 100);
}
